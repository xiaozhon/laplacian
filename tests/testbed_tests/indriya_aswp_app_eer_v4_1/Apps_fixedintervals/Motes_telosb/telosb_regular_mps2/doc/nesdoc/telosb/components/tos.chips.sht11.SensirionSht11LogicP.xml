<?xml version="1.0" ?><component abstract="" loc="53:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>
 SensirionSht11LogicP contains the actual driver logic needed to
 read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>
 SensirionSht11LogicP contains the actual driver logic needed to
 read from the Sensirion SHT11 temperature/humidity sensor. It
 depends on 2 underlying GeneralIO interfaces, one for the data pin
 and one for the clock pin, and one underlying GpioInterrupt.  It
 provides the HAL-level SensirionSht11 interface. It's generic, so
 you can instantiate it multiple times if you have more than one
 Sensirion SHT11 attached to a node. 
 
 &lt;p&gt;
 This code assumes that the MCU clock is less than 10 MHz.  If you
 ever run this on a faster MCU, you'll need to insert a lot of
 waits to keep the Sensirion happy.

 @author Gilman Tolle &lt;gtolle@archrock.com&gt;
 @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $
</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    <specification><interface loc="58:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" name="InterruptDATA" provided="0" ref="0x417bc8c0">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="InterruptDATA" ref="0x417bc8c0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.GpioInterrupt" qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" ref="0x417bca98" scoped=""/>
        <function-ref name="disable" ref="0x417bcb78" scoped=""/>
        <function-ref name="enableFallingEdge" ref="0x417bcc58" scoped=""/>
        <function-ref name="enableRisingEdge" ref="0x417bcd38" scoped=""/>
      </interface-functions>
    </interface><interface loc="102:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" name="readSensor" provided="0" ref="0x417b1d68">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="readSensor" ref="0x417b1d68" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.TaskBasic" qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" ref="0x417b0010" scoped=""/>
        <function-ref name="runTask" ref="0x417b00f0" scoped=""/>
      </interface-functions>
    </interface><interface loc="103:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" name="signalStatusDone" provided="0" ref="0x417b0670">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="signalStatusDone" ref="0x417b0670" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.TaskBasic" qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" ref="0x417b0848" scoped=""/>
        <function-ref name="runTask" ref="0x417b0928" scoped=""/>
      </interface-functions>
    </interface><interface loc="57:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" name="CLOCK" provided="0" ref="0x417bddf0">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="CLOCK" ref="0x417bddf0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.GeneralIO" qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" ref="0x417bc010" scoped=""/>
        <function-ref name="isInput" ref="0x417bc0f0" scoped=""/>
        <function-ref name="toggle" ref="0x417bc1d0" scoped=""/>
        <function-ref name="isOutput" ref="0x417bc2b0" scoped=""/>
        <function-ref name="get" ref="0x417bc390" scoped=""/>
        <function-ref name="makeOutput" ref="0x417bc470" scoped=""/>
        <function-ref name="set" ref="0x417bc550" scoped=""/>
        <function-ref name="clr" ref="0x417bc630" scoped=""/>
      </interface-functions>
    </interface><interface loc="54:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" name="SensirionSht11" provided="1" ref="0x417be7c8">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="SensirionSht11" ref="0x417be7c8" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.chips.sht11.SensirionSht11" qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
          <typename><typedef-ref name="uint8_t" ref="0x401e1dd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" ref="0x417be9a0" scoped=""/>
        <function-ref name="readStatusReg" ref="0x417bea80" scoped=""/>
        <function-ref name="measureHumidity" ref="0x417beb60" scoped=""/>
        <function-ref name="measureTemperature" ref="0x417bec40" scoped=""/>
        <function-ref name="writeStatusReg" ref="0x417bed20" scoped=""/>
        <function-ref name="reset" ref="0x417bee00" scoped=""/>
        <function-ref name="writeStatusRegDone" ref="0x417beee0" scoped=""/>
        <function-ref name="readStatusRegDone" ref="0x417bd010" scoped=""/>
        <function-ref name="resetDone" ref="0x417bd0f0" scoped=""/>
        <function-ref name="measureTemperatureDone" ref="0x417bd1d0" scoped=""/>
      </interface-functions>
    </interface><interface loc="56:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" name="DATA" provided="0" ref="0x417bd3e0">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="DATA" ref="0x417bd3e0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.GeneralIO" qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" ref="0x417bd5b8" scoped=""/>
        <function-ref name="isInput" ref="0x417bd698" scoped=""/>
        <function-ref name="toggle" ref="0x417bd778" scoped=""/>
        <function-ref name="isOutput" ref="0x417bd858" scoped=""/>
        <function-ref name="get" ref="0x417bd938" scoped=""/>
        <function-ref name="makeOutput" ref="0x417bda18" scoped=""/>
        <function-ref name="set" ref="0x417bdaf8" scoped=""/>
        <function-ref name="clr" ref="0x417bdbd8" scoped=""/>
      </interface-functions>
    </interface><interface loc="62:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" name="Leds" provided="0" ref="0x417b8270">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Leds" ref="0x417b8270" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.Leds" qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" ref="0x417b8448" scoped=""/>
        <function-ref name="led0Toggle" ref="0x417b8528" scoped=""/>
        <function-ref name="led1On" ref="0x417b8608" scoped=""/>
        <function-ref name="led1Toggle" ref="0x417b86e8" scoped=""/>
        <function-ref name="led2Toggle" ref="0x417b87c8" scoped=""/>
        <function-ref name="get" ref="0x417b88a8" scoped=""/>
        <function-ref name="led1Off" ref="0x417b8988" scoped=""/>
        <function-ref name="led2Off" ref="0x417b8d08" scoped=""/>
        <function-ref name="set" ref="0x417b8a68" scoped=""/>
        <function-ref name="led0On" ref="0x417b8b48" scoped=""/>
        <function-ref name="led2On" ref="0x417b8c28" scoped=""/>
      </interface-functions>
    </interface><interface loc="60:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" name="Timer" provided="0" ref="0x417bb010">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Timer" ref="0x417bb010" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Timer" qname="Timer"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x40035cf8"/>
            <typename><typedef-ref name="TMilli" ref="0x405e1108"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x417b9b00" scoped=""/>
        <function-ref name="fired" ref="0x417bbd90" scoped=""/>
        <function-ref name="startPeriodicAt" ref="0x417b94c0" scoped=""/>
        <function-ref name="isOneShot" ref="0x417b9268" scoped=""/>
        <function-ref name="getdt" ref="0x417b8010" scoped=""/>
        <function-ref name="gett0" ref="0x417b9d58" scoped=""/>
        <function-ref name="isRunning" ref="0x417b9010" scoped=""/>
        <function-ref name="startPeriodic" ref="0x417bb638" scoped=""/>
        <function-ref name="startOneShotAt" ref="0x417b97e0" scoped=""/>
        <function-ref name="startOneShot" ref="0x417bb8b8" scoped=""/>
        <function-ref name="stop" ref="0x417bbb38" scoped=""/>
      </interface-functions>
    </interface></specification><referenced/></component>
<?xml version="1.0" ?><component abstract="" loc="85:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" nicename="tos.platforms.micaz.chips.cc2420.HplCC2420AlarmC" qname="HplCC2420AlarmC">
      <documentation loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>
 A platform independent abstraction of an asynchronous 32KHz, 16-bit
 timer for the CC2420.</short>
        <long>
 A platform independent abstraction of an asynchronous 32KHz, 16-bit
 timer for the CC2420. As these timers (the Alarm interface) are
 usually part of an HAL, they are platform specific. But as the
 CC2420 needs to be cross-platform, this component bridges between
 the two, providing a platform-independent abstraction of
 CC2420-specific Alarm. This is a Atmega128 implementation that
 uses the Compare1A register.

 @author Philip Levis
 @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $
</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="94:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
          <from><interface-ref name="Alarm" ref="0x4079c668" scoped=""/></from>
          <to><interface-ref name="Alarm" ref="0x407b03a0" scoped=""/></to>
        </wire>
        <wire loc="93:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
          <from><interface-ref name="Init" ref="0x407b2010" scoped=""/></from>
          <to><interface-ref name="Init" ref="0x40898798" scoped=""/></to>
        </wire>
      </wiring>
    <specification><interface loc="86:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" name="Alarm" provided="1" ref="0x4079c668">
      <component-ref nicename="tos.platforms.micaz.chips.cc2420.HplCC2420AlarmC" qname="HplCC2420AlarmC"/>
      <type-interface alignment="I:1" size="I:2"><interface-ref name="Alarm" ref="0x4079c668" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Alarm" qname="Alarm"/>
        <arguments>
          <type-tag alignment="I:1" size="I:2"><struct-ref ref="0x40382d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40382f08"/></typename>
          </type-tag>
          <type-int alignment="I:1" cname="unsigned long" size="I:4" unsigned="">
            <typename><typedef-ref name="uint32_t" ref="0x401e2848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x4079bb10" scoped=""/>
        <function-ref name="fired" ref="0x4079b2e0" scoped=""/>
        <function-ref name="startAt" ref="0x4079b7d0" scoped=""/>
        <function-ref name="isRunning" ref="0x4079b558" scoped=""/>
        <function-ref name="getAlarm" ref="0x4079bd88" scoped=""/>
        <function-ref name="start" ref="0x4079cdb8" scoped=""/>
        <function-ref name="stop" ref="0x4079b068" scoped=""/>
      </interface-functions>
    </interface><interface loc="87:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" name="Init" provided="1" ref="0x407b2010">
      <component-ref nicename="tos.platforms.micaz.chips.cc2420.HplCC2420AlarmC" qname="HplCC2420AlarmC"/>
      <type-interface alignment="I:1" size="I:2"><interface-ref name="Init" ref="0x407b2010" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.Init" qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" ref="0x407b21e8" scoped=""/>
      </interface-functions>
    </interface></specification><referenced><interface loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc" name="Alarm" provided="1" ref="0x407b03a0">
      <component-ref nicename="tos.platforms.mica.Alarm32khz32C" qname="HplCC2420AlarmC.Alarm32khz32C"/>
      <type-interface alignment="I:1" size="I:2"><interface-ref name="Alarm" ref="0x407b03a0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Alarm" qname="Alarm"/>
        <arguments>
          <type-tag alignment="I:1" size="I:2"><struct-ref ref="0x40382d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40382f08"/></typename>
          </type-tag>
          <type-int alignment="I:1" cname="unsigned long" size="I:4" unsigned="">
            <typename><typedef-ref name="uint32_t" ref="0x401e2848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x40899878" scoped=""/>
        <function-ref name="fired" ref="0x40899048" scoped=""/>
        <function-ref name="startAt" ref="0x40899538" scoped=""/>
        <function-ref name="isRunning" ref="0x408992c0" scoped=""/>
        <function-ref name="getAlarm" ref="0x40899af0" scoped=""/>
        <function-ref name="start" ref="0x407b0af0" scoped=""/>
        <function-ref name="stop" ref="0x407b0d90" scoped=""/>
      </interface-functions>
    </interface><interface loc="18:/opt/tinyos-2.1.2/tos/system/NoInitC.nc" name="Init" provided="1" ref="0x40898798">
      <component-ref nicename="tos.system.NoInitC" qname="NoInitC"/>
      <type-interface alignment="I:1" size="I:2"><interface-ref name="Init" ref="0x40898798" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.Init" qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" ref="0x40898970" scoped=""/>
      </interface-functions>
    </interface><component abstract="" loc="26(HplCC2420AlarmC.Alarm32khz32C):/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc" nicename="tos.platforms.mica.Alarm32khz32C" qname="HplCC2420AlarmC.Alarm32khz32C">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>
 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>
 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica
 family 32kHz Alarm is built on hardware timer 1, and actually runs at
 CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()
 command to figure out the exact frequency.
 &lt;p&gt;
 Upto three of these alarms can be created (one per hardware compare
 register). Note that creating one of these Alarms consumes a 16-bit
 32kHz Alarm (see Alarm32khz16C).

 @author David Gay &lt;dgay@intel-research.net&gt;
</long>
      </documentation>
      <instance>
        <component-ref nicename="tos.platforms.mica.Alarm32khz32C" qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component><component loc="16:/opt/tinyos-2.1.2/tos/system/NoInitC.nc" nicename="tos.system.NoInitC" qname="NoInitC" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/NoInitC.nc">
        <short>
 A do-nothing Init implementation.</short>
        <long>
 A do-nothing Init implementation. Useful for implementing components whose
 specification has an Init, but whose implementation doesn't need one.

 @author David Gay &lt;david.e.gay@intel.com&gt;
</long>
      </documentation>
      <module/>
    </component></referenced></component>
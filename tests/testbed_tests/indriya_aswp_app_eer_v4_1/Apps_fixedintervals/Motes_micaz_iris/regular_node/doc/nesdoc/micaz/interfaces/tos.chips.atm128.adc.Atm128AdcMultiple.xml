<?xml version="1.0" ?><interfacedef loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc" nicename="tos.chips.atm128.adc.Atm128AdcMultiple" qname="Atm128AdcMultiple">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>
 Hardware Abstraction Layer interface of Atmega128 for acquiring data
 from multiple channels using the ATmega128's free-running mode.</short>
        <long>
 Hardware Abstraction Layer interface of Atmega128 for acquiring data
 from multiple channels using the ATmega128's free-running mode.
 &lt;p&gt;
 Because of the possibility that samples may be imprecise after 
 switching channels and/or reference voltages, and because there
 is a one sample delay on swithcing channels and reference voltages,
 Atm128ADCMultiple is complex. Two straightforward uses are:
 &lt;ol type=&quot;A&quot;&gt;
 &lt;li&gt;Acquire N samples from channel C:
    &lt;ol&gt;
    &lt;li&gt;call getData to start sampling on channel C at the desired rate
       (note that the choice of prescalers is very limited, so you
       don't have many choices for sampling rate)
    &lt;li&gt;ignore the first dataReady event
    &lt;li&gt;use the results of the next N dataReady() events, return FALSE
       on the last one
    &lt;/ol&gt;
 &lt;li&gt;Acquire one sample each from channels C1, ..., Cn (this pseudocode
    assumes that none of these channels are differential)
    &lt;ol&gt;
    &lt;li&gt;call getData to start sampling on channel C1
    &lt;li&gt;on the ith dataReady event switch to channel Ci+1 by changing
       *newChannel
    &lt;li&gt;the data passed to the ith dataReady event is for channel Ci-1
       (the data from the first dataReady event is ignored)
    &lt;/ol&gt;
 &lt;/ol&gt;

 @author Hu Siquan &lt;husq@xbow.com&gt;
 @author David Gay
</long>
      </documentation>
      <function command="" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc" name="getData" provided="0" ref="0x4131c1d8">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>
 Initiates free-running ADC conversions, with the ability to switch 
 channels and reference-voltage with a one sample delay.</short>
          <long>
 Initiates free-running ADC conversions, with the ability to switch 
 channels and reference-voltage with a one sample delay.

 @param channel Initial A/D conversion channel. The channel can 
   be changed in the dataReady event, though these changes happen
   with a one-sample delay (this is a hardware restriction).
 @param refVoltage Initial A/D reference voltage. See the
   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,
   the reference voltage can be changed in the dataReady event with
   a one-sample delay.
 @param leftJustify TRUE to place A/D result in high-order bits 
   (i.e., shifted left by 6 bits), low to place it in the low-order bits
 @param prescaler Prescaler value for the A/D conversion clock. If you 
  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees
  full precision. Other prescalers can be used to get faster conversions. 
  See the ATmega128 manual for details.
 @return TRUE if the conversion will be precise, FALSE if it will be 
   imprecise (due to a change in reference voltage, or switching to a
   differential input channel)
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.atm128.adc.Atm128AdcMultiple" qname="Atm128AdcMultiple"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="bool" ref="0x403216e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x401e1b70"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x401e1b70"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="bool" ref="0x403216e8"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x401e1b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc" name="channel" ref="0x4131d9b8">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x401e1b70"/></typename>
            </type-int>
          </variable>
          <variable loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc" name="refVoltage" ref="0x4131dbe0">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x401e1b70"/></typename>
            </type-int>
          </variable>
          <variable loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc" name="leftJustify" ref="0x4131de08">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="bool" ref="0x403216e8"/></typename>
            </type-int>
          </variable>
          <variable loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc" name="prescaler" ref="0x4131c068">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x401e1b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc" name="dataReady" provided="0" ref="0x4131b558">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>
 Returns the next sample in a free-running conversion.</short>
          <long>
 Returns the next sample in a free-running conversion. Allow the user
 to switch channels and/or reference voltages with a one sample delay.

 @param data a 2 byte unsigned data value sampled by the ADC.
 @param precise if this conversion was precise, FALSE if it wasn't 
   (we assume that the second conversion after a change of reference
   voltage or after switching to a differential channel is precise)
 @param channel Channel this sample was from.
 @param newChannel Change this parameter to switch to a new channel
   for the second next sample.
 @param newRefVoltage Change this parameter to change the reference 
   voltage for the second next sample.

 @return TRUE to continue sampling, FALSE to stop.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.chips.atm128.adc.Atm128AdcMultiple" qname="Atm128AdcMultiple"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="bool" ref="0x403216e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="uint16_t" ref="0x401e21e8"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="bool" ref="0x403216e8"/></typename>
            </type-int>
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x401e1b70"/></typename>
            </type-int>
            <type-pointer alignment="I:1" size="I:2">
              <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
                <typename><typedef-ref name="uint8_t" ref="0x401e1b70"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer alignment="I:1" size="I:2">
              <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
                <typename><typedef-ref name="uint8_t" ref="0x401e1b70"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc" name="data" ref="0x4131caf8">
            <type-int alignment="I:1" cname="unsigned short" size="I:2" unsigned="">
              <typename><typedef-ref name="uint16_t" ref="0x401e21e8"/></typename>
            </type-int>
          </variable>
          <variable loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc" name="precise" ref="0x4131cce8">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="bool" ref="0x403216e8"/></typename>
            </type-int>
          </variable>
          <variable loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc" name="channel" ref="0x4131cef0">
            <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
              <typename><typedef-ref name="uint8_t" ref="0x401e1b70"/></typename>
            </type-int>
          </variable>
          <variable loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc" name="newChannel" ref="0x4131b178">
            <type-pointer alignment="I:1" size="I:2">
              <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
                <typename><typedef-ref name="uint8_t" ref="0x401e1b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc" name="newRefVoltage" ref="0x4131b3e0">
            <type-pointer alignment="I:1" size="I:2">
              <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
                <typename><typedef-ref name="uint8_t" ref="0x401e1b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>